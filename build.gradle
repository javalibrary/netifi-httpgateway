buildscript {
    configurations.classpath {
        resolutionStrategy.activateDependencyLocking()
    }
    repositories {
        maven {
            url 'https://sonatype.netifiinc.com/repository/netifi-plugin-group/'
            credentials {
                username = "${netifiReadOnlyUsername}"
                password = "${netifiReadOnlyPassword}"
            }
        }
    }
    dependencies {
        classpath 'com.bmuschko:gradle-docker-plugin:4.8.1'
        classpath 'com.gradle:build-scan-plugin:2.3'
        classpath 'gradle.plugin.com.google.protobuf:protobuf-gradle-plugin:0.8.8'
        classpath 'gradle.plugin.com.palantir.gradle.gitversion:gradle-git-version:0.12.0-rc2'
        classpath 'io.spring.gradle:dependency-management-plugin:1.0.7.RELEASE'
    }
}

apply plugin: 'com.gradle.build-scan'
apply plugin: 'com.palantir.git-version'

buildScan {
    termsOfServiceUrl = 'https://gradle.com/terms-of-service'
    termsOfServiceAgree = 'yes'
}


// TODO: make this a Gradle plugin someday
def details = versionDetails()
def versionSuffix = ''
def buildNumber = "${System.getenv('BUILD_NUMBER') ?: 'dev'}"
def tmpUniqueVersion = "${project.version}"

if (details.branchName != null) {
    if (details.branchName == 'master') {
        // Master should never have a suffix
    } else if (details.branchName == 'develop') {
        versionSuffix = '-SNAPSHOT'
        tmpUniqueVersion += "-${buildNumber}-SNAPSHOT"
    } else if (details.branchName.startsWith('release')) {
        versionSuffix = "-${buildNumber}-RC"
        tmpUniqueVersion += "-${buildNumber}-RC"
    } else {
        versionSuffix = "-${details.branchName.replace("/", "-")}-SNAPSHOT"
        tmpUniqueVersion += "-${details.branchName.replace("/", "-")}-${buildNumber}-SNAPSHOT"
    }
}


allprojects {
    dependencyLocking {
        lockAllConfigurations()
    }

    project.version += versionSuffix
    ext {
        uniqueVersion = "${tmpUniqueVersion}"
    }
}

subprojects {
    apply from: '../dependency-management.gradle'
    apply plugin: 'idea'
    apply plugin: 'java'
    apply plugin: 'maven-publish'
    apply plugin: 'com.google.protobuf'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    compileTestJava {
        sourceCompatibility = 11
        targetCompatibility = 11
    }

    repositories {
        mavenLocal()
        maven {
            url 'https://sonatype.netifiinc.com/repository/jcenter/'
            credentials {
                username = "${netifiReadOnlyUsername}"
                password = "${netifiReadOnlyPassword}"
            }
        }
        maven {
            url 'https://sonatype.netifiinc.com/repository/maven-central/'
            credentials {
                username = "${netifiReadOnlyUsername}"
                password = "${netifiReadOnlyPassword}"
            }
        }
        maven {
            url 'https://sonatype.netifiinc.com/repository/netifi-oss/'
            credentials {
                username = "${netifiReadOnlyUsername}"
                password = "${netifiReadOnlyPassword}"
            }
        }
        maven {
            url 'https://sonatype.netifiinc.com/repository/netifi-maven-releases/'
            credentials {
                username = "${netifiReadOnlyUsername}"
                password = "${netifiReadOnlyPassword}"
            }
        }
        maven {
            url 'https://sonatype.netifiinc.com/repository/netifi-maven-snapshots/'
            credentials {
                username = "${netifiReadOnlyUsername}"
                password = "${netifiReadOnlyPassword}"
            }
        }
        maven {
            url 'https://sonatype.netifiinc.com/repository/spring-libs-snapshot/'
            credentials {
                username = "${netifiReadOnlyUsername}"
                password = "${netifiReadOnlyPassword}"
            }
        }
        maven {
            url 'https://sonatype.netifiinc.com/repository/jcenter-oss-snapshot/'
            credentials {
                username = "${netifiReadOnlyUsername}"
                password = "${netifiReadOnlyPassword}"
            }
        }
        maven {
            url 'https://sonatype.netifiinc.com/repository/jcenter-oss-release/'
            credentials {
                username = "${netifiReadOnlyUsername}"
                password = "${netifiReadOnlyPassword}"
            }
        }
    }

    task sourcesJar( type: Jar, dependsOn: classes) {
        archiveClassifier = 'sources'
        from sourceSets.main.allSource
        version = "${project.version}"
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        archiveClassifier = 'javadoc'
        from javadoc.destinationDir
        version = "${project.version}"
    }

    artifacts {
        archives sourcesJar
        archives javadocJar
    }
    task allDeps(type: DependencyReportTask) {}
}
